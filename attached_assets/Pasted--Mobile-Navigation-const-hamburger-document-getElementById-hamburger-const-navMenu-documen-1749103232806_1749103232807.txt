// Mobile Navigation
const hamburger = document.getElementById('hamburger');
const navMenu = document.getElementById('nav-menu');

if (hamburger && navMenu) {
    hamburger.addEventListener('click', () => {
        navMenu.classList.toggle('active');

        // Animate hamburger
        hamburger.classList.toggle('active');
    });

    // Close mobile menu when clicking nav links
    document.querySelectorAll('.nav-link').forEach(link => {
        link.addEventListener('click', () => {
            navMenu.classList.remove('active');
            hamburger.classList.remove('active');
        });
    });
}

// Navbar scroll effect
window.addEventListener('scroll', () => {
    const navbar = document.getElementById('navbar');
    if (navbar) {
        if (window.scrollY > 50) {
            navbar.classList.add('scrolled');
        } else {
            navbar.classList.remove('scrolled');
        }
    }
});

// Typing animation
const typingText = document.getElementById('typing-text');
const phrases = [
    'Graphic Designer',
    'Visual Artist',
    'Brand Creator',
    'Digital Artist'
];

let currentPhrase = 0;
let currentChar = 0;
let isDeleting = false;

function typeEffect() {
    if (!typingText) return;

    const current = phrases[currentPhrase];

    if (!isDeleting) {
        typingText.textContent = current.substring(0, currentChar + 1);
        currentChar++;

        if (currentChar === current.length) {
            isDeleting = true;
            setTimeout(typeEffect, 2000);
            return;
        }
    } else {
        typingText.textContent = current.substring(0, currentChar - 1);
        currentChar--;

        if (currentChar === 0) {
            isDeleting = false;
            currentPhrase = (currentPhrase + 1) % phrases.length;
        }
    }

    setTimeout(typeEffect, isDeleting ? 50 : 100);
}

// Start typing animation
if (typingText) {
    typeEffect();
}

// Hire button effect
const hireBtn = document.getElementById('hire-btn');
if (hireBtn) {
    hireBtn.addEventListener('click', () => {
        // Scroll to contact section
        const contactSection = document.getElementById('contact');
        if (contactSection) {
            contactSection.scrollIntoView({
                behavior: 'smooth'
            });
        }
    });
}

// Contact form submission
const contactForm = document.getElementById('contact-form');
if (contactForm) {
    contactForm.addEventListener('submit', (e) => {
        e.preventDefault();

        // Get form data
        const name = document.getElementById('name');
        const email = document.getElementById('email');
        const message = document.getElementById('message');

        // Simple validation
        if (name && email && message && name.value && email.value && message.value) {
            alert('Thank you for your message! I will get back to you soon.');
            contactForm.reset();
        } else {
            alert('Please fill in all fields.');
        }
    });
}

// Intersection Observer for animations
const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
};

const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.classList.add('visible');
        }
    });
}, observerOptions);

// Add animation classes and observe elements
document.addEventListener('DOMContentLoaded', () => {
    // Animate sections
    const animateElements = document.querySelectorAll('.about-content, .skills-grid, .portfolio-grid, .services-grid, .contact-content, .testimonial-slider, .faq-container');

    animateElements.forEach((el, index) => {
        if (index % 2 === 0) {
            el.classList.add('fade-in');
        } else {
            el.classList.add('slide-in-left');
        }
        observer.observe(el);
    });

    // Animate individual cards
    const cards = document.querySelectorAll('.portfolio-item, .service-card, .skill-item');
    cards.forEach((card, index) => {
        card.classList.add('fade-in');
        card.style.transitionDelay = `${index * 0.1}s`;
        observer.observe(card);
    });
});

// Skills animation
function animateCounter(element, start, end, duration) {
    const startTime = performance.now();

    function updateCounter(currentTime) {
        const elapsed = currentTime - startTime;
        const progress = Math.min(elapsed / duration, 1);

        // Easing function for smooth animation
        const easeOutCubic = 1 - Math.pow(1 - progress, 3);
        const currentValue = Math.round(easeOutCubic * (end - start) + start);

        element.textContent = currentValue + '%';

        if (progress < 1) {
            requestAnimationFrame(updateCounter);
        }
    }

    requestAnimationFrame(updateCounter);
}

const skillsObserver = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            const skillItems = entry.target.querySelectorAll('.skill-item');

            skillItems.forEach((item, index) => {
                const progressBar = item.querySelector('.skill-progress');
                const percentage = item.querySelector('.skill-percentage');
                const targetWidth = progressBar.dataset.width;

                setTimeout(() => {
                    progressBar.style.width = targetWidth + '%';

                    // Animate the percentage counter
                    animateCounter(percentage, 0, parseInt(targetWidth), 2000);
                }, index * 200);
            });

            skillsObserver.unobserve(entry.target);
        }
    });
}, { threshold: 0.5 });

const skillsSection = document.querySelector('.skills');
if (skillsSection) {
    skillsObserver.observe(skillsSection);
}

// Testimonial Slider
let currentSlide = 0;
const slides = document.querySelectorAll('.testimonial-slide');
const dots = document.querySelectorAll('.dot');

function showSlide(index) {
    slides.forEach(slide => slide.classList.remove('active'));
    dots.forEach(dot => dot.classList.remove('active'));

    if (slides[index]) slides[index].classList.add('active');
    if (dots[index]) dots[index].classList.add('active');
}

function nextSlide() {
    if (slides.length > 0) {
        currentSlide = (currentSlide + 1) % slides.length;
        showSlide(currentSlide);
    }
}

// Auto-play testimonials
if (slides.length > 0) {
    setInterval(nextSlide, 5000);
}

// Dot navigation
dots.forEach((dot, index) => {
    dot.addEventListener('click', () => {
        currentSlide = index;
        showSlide(currentSlide);
    });
});

// FAQ Accordion
document.querySelectorAll('.faq-question').forEach(question => {
    question.addEventListener('click', () => {
        const faqItem = question.parentElement;
        const isActive = faqItem.classList.contains('active');

        // Close all FAQ items
        document.querySelectorAll('.faq-item').forEach(item => {
            item.classList.remove('active');
        });

        // Open clicked item if it wasn't active
        if (!isActive) {
            faqItem.classList.add('active');
        }
    });
});

// Contact Form
document.getElementById('contact-form').addEventListener('submit', function(e) {
    e.preventDefault();

    const name = document.getElementById('name').value;
    const email = document.getElementById('email').value;
    const message = document.getElementById('message').value;

    if (name && email && message) {
        // Simulate form submission
        const submitBtn = this.querySelector('.submit-btn');
        const originalText = submitBtn.innerHTML;

        submitBtn.innerHTML = '<span>Sending...</span>';
        submitBtn.disabled = true;

        setTimeout(() => {
            submitBtn.innerHTML = '<span>Message Sent!</span>';
            this.reset();

            setTimeout(() => {
                submitBtn.innerHTML = originalText;
                submitBtn.disabled = false;
            }, 2000);
        }, 1500);
    }
});

// Parallax effect for hero section
window.addEventListener('scroll', () => {
    const scrolled = window.pageYOffset;
    const hero = document.querySelector('.hero');
    const heroContent = document.querySelector('.hero-container');

    if (hero && heroContent) {
        heroContent.style.transform = `translateY(${scrolled * 0.3}px)`;
    }
});

// Mouse cursor glow effect (optional enhancement)
document.addEventListener('mousemove', (e) => {
    const cursor = document.querySelector('.cursor-glow');
    if (!cursor) {
        const glowCursor = document.createElement('div');
        glowCursor.className = 'cursor-glow';
        glowCursor.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 20px;
            height: 20px;
            background: radial-gradient(circle, rgba(0,255,255,0.3) 0%, transparent 70%);
            border-radius: 50%;
            pointer-events: none;
            z-index: 9999;
            mix-blend-mode: screen;
            transition: transform 0.1s ease;
        `;
        document.body.appendChild(glowCursor);
    }

    const glowElement = document.querySelector('.cursor-glow');
    if (glowElement) {
        glowElement.style.left = e.clientX - 10 + 'px';
        glowElement.style.top = e.clientY - 10 + 'px';
    }
});

// Portfolio hover effects
document.querySelectorAll('.portfolio-item').forEach(item => {
    item.addEventListener('mouseenter', function() {
        this.style.transform = 'translateY(-15px) scale(1.02)';
    });

    item.addEventListener('mouseleave', function() {
        this.style.transform = 'translateY(0) scale(1)';
    });
});

// Service cards glow animation
document.querySelectorAll('.service-card').forEach(card => {
    card.addEventListener('mouseenter', function() {
        const glow = this.querySelector('.service-glow');
        if (glow) {
            glow.style.opacity = '0.15';
        }
    });

    card.addEventListener('mouseleave', function() {
        const glow = this.querySelector('.service-glow');
        if (glow) {
            glow.style.opacity = '0';
        }
    });
});

// Add loading animation
window.addEventListener('load', () => {
    document.body.classList.add('loaded');

    // Animate hero elements
    setTimeout(() => {
        document.querySelector('.animated-logo').style.opacity = '1';
        document.querySelector('.animated-logo').style.transform = 'translateY(0)';
    }, 200);

    setTimeout(() => {
        document.querySelector('.hero-title').style.opacity = '1';
        document.querySelector('.hero-title').style.transform = 'translateY(0)';
    }, 400);

    setTimeout(() => {
        document.querySelector('.hero-description').style.opacity = '1';
        document.querySelector('.hero-description').style.transform = 'translateY(0)';
    }, 600);

    setTimeout(() => {
        document.querySelector('.hire-btn').style.opacity = '1';
        document.querySelector('.hire-btn').style.transform = 'translateY(0)';
    }, 800);
});

// Project Modal System
const projectModal = document.getElementById('project-modal');
const modalTitle = document.getElementById('modal-title');
const mainImage = document.getElementById('main-image');
const loadingPlaceholder = document.getElementById('loading-placeholder');
const thumbnailsContainer = document.getElementById('image-thumbnails');
const projectDescription = document.getElementById('project-description');
const projectDetails = document.getElementById('project-details');
const imageCounter = document.getElementById('image-counter');
const closeModal = document.getElementById('close-modal');
const navPrev = document.getElementById('nav-prev');
const navNext = document.getElementById('nav-next');

let currentProject = null;
let currentImageIndex = 0;
let projectImages = [];

// Sample project data (in a real implementation, this would come from your JSON files)
const projectsData = {
    'project-1': {
        title: 'Brand Identity Design',
        description: 'A comprehensive brand identity design project featuring logo creation, color palette development, and brand guidelines. This project showcases modern design principles with a focus on versatility and memorability.',
        images: [
            "projects/project-1/images/Haunted Castle.png"
        ],
        tools: ['Adobe Illustrator', 'Adobe Photoshop', 'Adobe InDesign'],
        client: 'TechStart Solutions',
        year: '2024',
        category: 'Branding'
    },
    'project-2': {
        title: 'Event Poster Campaign',
        description: 'A vibrant poster design campaign for a music festival featuring dynamic typography, bold colors, and engaging visual elements that capture the energy and excitement of the event.',
        images: [
            'https://via.placeholder.com/800x600/ff6b6b/ffffff?text=Main+Poster',
            'https://via.placeholder.com/800x600/feca57/000000?text=Social+Media',
            'https://via.placeholder.com/800x600/48dbfb/000000?text=Print+Materials',
            'https://via.placeholder.com/800x600/ff9ff3/000000?text=Mockups'
        ],
        tools: ['Adobe Photoshop', 'Adobe Illustrator'],
        client: 'Summer Vibes Festival',
        year: '2024',
        category: 'Poster Design'
    },
    'project-3': {
        title: 'Digital Artwork',
        description: 'An abstract digital artwork exploring color theory and geometric compositions. This piece demonstrates mastery of digital painting techniques and creative expression through modern design elements.',
        images: [
            'https://via.placeholder.com/800x600/667eea/ffffff?text=Final+Artwork',
            'https://via.placeholder.com/800x600/764ba2/ffffff?text=Process+Sketches',
            'https://via.placeholder.com/800x600/f093fb/000000?text=Color+Studies',
            'https://via.placeholder.com/800x600/4ecdc4/000000?text=Details'
        ],
        tools: ['Adobe Photoshop', 'Procreate', 'Adobe Illustrator'],
        client: 'Personal Project',
        year: '2024',
        category: 'Digital Art'
    },
    'project-4': {
        title: 'Social Media Kit',
        description: 'A comprehensive social media design package featuring Instagram post templates, story designs, and brand-consistent graphics that enhance online presence and engagement.',
        images: [
            'https://via.placeholder.com/800x600/e91e63/ffffff?text=Instagram+Posts',
            'https://via.placeholder.com/800x600/ff5722/ffffff?text=Story+Templates',
            'https://via.placeholder.com/800x600/9c27b0/ffffff?text=Highlight+Covers',
            'https://via.placeholder.com/800x600/3f51b5/ffffff?text=Carousel+Designs'
        ],
        tools: ['Adobe Photoshop', 'Canva Pro', 'Adobe Illustrator'],
        client: 'BrandLift Agency',
        year: '2024',
        category: 'Social Media Design'
    },
    'project-5': {
        title: 'Business Card Design',
        description: 'Professional business card designs that make a lasting impression. Features modern typography, premium materials, and sophisticated color schemes that reflect corporate identity.',
        images: [
            'https://via.placeholder.com/800x600/795548/ffffff?text=Front+Design',
            'https://via.placeholder.com/800x600/607d8b/ffffff?text=Back+Design',
            'https://via.placeholder.com/800x600/424242/ffffff?text=Mockup+Views',
            'https://via.placeholder.com/800x600/37474f/ffffff?text=Print+Ready'
        ],
        tools: ['Adobe Illustrator', 'Adobe InDesign', 'Adobe Photoshop'],
        client: 'Corporate Solutions Inc',
        year: '2024',
        category: 'Print Design'
    },
    'project-6': {
        title: 'Website Graphics & UI',
        description: 'Custom web graphics and user interface elements designed to enhance user experience. Includes icons, buttons, banners, and interactive elements with modern design principles.',
        images: [
            'https://via.placeholder.com/800x600/00bcd4/ffffff?text=UI+Elements',
            'https://via.placeholder.com/800x600/009688/ffffff?text=Icon+Set',
            'https://via.placeholder.com/800x600/4caf50/ffffff?text=Web+Banners',
            'https://via.placeholder.com/800x600/8bc34a/000000?text=Interactive+Design'
        ],
        tools: ['Figma', 'Adobe XD', 'Adobe Illustrator', 'Sketch'],
        client: 'Digital Innovations Co',
        year: '2024',
        category: 'UI/UX Design'
    }
};

// Open project modal
function openProjectModal(projectId) {
    const project = projectsData[projectId];
    if (!project) return;

    currentProject = project;
    currentImageIndex = 0;
    projectImages = project.images;

    // Set modal content
    modalTitle.textContent = project.title;
    projectDescription.textContent = project.description;

    // Generate project details
    projectDetails.innerHTML = `
        <div class="detail-item">
            <div class="detail-label">Client</div>
            <div class="detail-value">${project.client}</div>
        </div>
        <div class="detail-item">
            <div class="detail-label">Year</div>
            <div class="detail-value">${project.year}</div>
        </div>
        <div class="detail-item">
            <div class="detail-label">Category</div>
            <div class="detail-value">${project.category}</div>
        </div>
        <div class="detail-item">
            <div class="detail-label">Tools Used</div>
            <div class="detail-value">
                <div class="tools-list">
                    ${project.tools.map(tool => `<span class="tool-tag">${tool}</span>`).join('')}
                </div>
            </div>
        </div>
    `;

    // Generate thumbnails
    generateThumbnails();

    // Load first image
    loadImage(0);

    // Show modal
    projectModal.classList.add('active');
    document.body.style.overflow = 'hidden';
}

// Generate thumbnail navigation
function generateThumbnails() {
    thumbnailsContainer.innerHTML = '';
    projectImages.forEach((image, index) => {
        const thumbnail = document.createElement('img');
        thumbnail.src = image;
        thumbnail.className = 'thumbnail';
        thumbnail.alt = `Image ${index + 1}`;
        if (index === 0) thumbnail.classList.add('active');

        thumbnail.addEventListener('click', () => loadImage(index));
        thumbnailsContainer.appendChild(thumbnail);
    });
}

// Load specific image
function loadImage(index) {
    if (index < 0 || index >= projectImages.length) return;

    currentImageIndex = index;

    // Show loading placeholder
    loadingPlaceholder.style.display = 'flex';
    mainImage.style.display = 'none';

    // Load image
    const img = new Image();
    img.onload = () => {
        mainImage.src = img.src;
        mainImage.style.display = 'block';
        loadingPlaceholder.style.display = 'none';
        updateImageCounter();
        updateActiveThumbnail();
    };
    img.src = projectImages[index];
}

// Update image counter
function updateImageCounter() {
    imageCounter.textContent = `${currentImageIndex + 1} / ${projectImages.length}`;
}

// Update active thumbnail
function updateActiveThumbnail() {
    document.querySelectorAll('.thumbnail').forEach((thumb, index) => {
        thumb.classList.toggle('active', index === currentImageIndex);
    });
}

// Close modal
function closeProjectModal() {
    projectModal.classList.remove('active');
    document.body.style.overflow = '';
    currentProject = null;
    currentImageIndex = 0;
    projectImages = [];
}

// Navigation functions
function nextImage() {
    const nextIndex = (currentImageIndex + 1) % projectImages.length;
    loadImage(nextIndex);
}

function prevImage() {
    const prevIndex = currentImageIndex === 0 ? projectImages.length - 1 : currentImageIndex - 1;
    loadImage(prevIndex);
}

// Event listeners for modal
closeModal.addEventListener('click', closeProjectModal);
navNext.addEventListener('click', nextImage);
navPrev.addEventListener('click', prevImage);

// Close modal when clicking outside
projectModal.addEventListener('click', (e) => {
    if (e.target === projectModal) {
        closeProjectModal();
    }
});

// Keyboard navigation
document.addEventListener('keydown', (e) => {
    if (!projectModal.classList.contains('active')) return;

    switch (e.key) {
        case 'Escape':
            closeProjectModal();
            break;
        case 'ArrowLeft':
            prevImage();
            break;
        case 'ArrowRight':
            nextImage();
            break;
    }
});

// Add click event listeners to portfolio items
document.querySelectorAll('.portfolio-item[data-project]').forEach(item => {
    item.addEventListener('click', (e) => {
        e.preventDefault();
        const projectId = item.getAttribute('data-project');
        openProjectModal(projectId);
    });
});

// Performance optimization: Throttle scroll events
function throttle(func, limit) {
    let inThrottle;
    return function() {
        const args = arguments;
        const context = this;
        if (!inThrottle) {
            func.apply(context, args);
            inThrottle = true;
            setTimeout(() => inThrottle = false, limit);
        }
    }
}

// Apply throttling to scroll events
window.addEventListener('scroll', throttle(() => {
    // Navbar effect
    const navbar = document.getElementById('navbar');
    if (window.scrollY > 50) {
        navbar.classList.add('scrolled');
    } else {
        navbar.classList.remove('scrolled');
    }

    // Parallax effect
    const scrolled = window.pageYOffset;
    const heroContent = document.querySelector('.hero-container');
    if (heroContent && scrolled < window.innerHeight) {
        heroContent.style.transform = `translateY(${scrolled * 0.3}px)`;
    }
}, 16)); // ~60fps